version: '3.1'

services:
  rmq:
    image: rabbitmq:3.8.3-alpine 
    container_name : rmq

  zoo:
    image: zookeeper
    restart: on-failure
    hostname: zoo
    ports:
      - 2182:2182
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2182
      ZOO_INIT_LIMIT: 10
    container_name: zoo

  orch:
    build:
      context: .
      dockerfile: oDockerfile
    command: sh -c "sleep 15 && python orchestrator.py"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/bin/docker:/usr/bin/docker
    
    container_name: orchestrator
    ports:
    - "80:80"
    links:
    - rmq
    - zoo
    image: "orch:latest"
    depends_on:
    - rmq
    - zoo
    restart: on-failure

  slave1:
    build:
        context: .
        dockerfile: Dockerfile
    command: sh -c "sleep 20 && python slave.py"
    links:
    - rmq
    - zoo    
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/bin/docker:/usr/bin/docker    
    depends_on:
    - rmq
    - zoo
    container_name: slave1
    restart: on-failure

  slave2:
    build:
        context: .
        dockerfile: Dockerfile
    command: sh -c "sleep 20 && python slave.py"
    links:
    - rmq
    - zoo    
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/bin/docker:/usr/bin/docker
    depends_on:
    - rmq
    - zoo
    container_name: slave2    
    restart: on-failure
